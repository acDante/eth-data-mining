We globally define the parameters for partitioning the signature matrix (bands b, rows per band r) as well as the parameters of the hash functions used for min-hashing and hashing the bands (randomized coefficients, primes and output spaces), since these are shared among the mappers.
A mapper receives a video as the value and extracts its shingles. Since each shingle is an integer, we consider its index to be equal to its value. Using the hash functions for min-hashing we calculate the signature matrix's column for the video. This column is split into bands. For each band we compute its hash as the sum of the hashes of the band's rows, modulo the number of buckets. For each band the mapper emits the band's id concatenated with the band's hash as the key and the whole video as the value.
A reducer receives such a key and a list of videos having this band hashed to the same bucket as the value. This list is sorted and for each video we extract the id and shingles. For each candidate pair of videos we compute the Jaccard similarity it is greater or equal to 85% we emit their ids. This eliminates false positives.
To reduce false negatives we chose b and r such that the target similarity would be a little less than 85% (81.8% to eliminate them).
Emitting the whole video for every band creates network traffic equal to b times the input. The reducers could just emit the video ids of each candidate pair and the verification of their similarity could be done in another step.
